table {
	players = [];
	pile = new pile;

	init {
		playerc = getInt("Enter number of players:"); //might want to limit players to 4, so as not to make it too complex?
		i = 0;
		while (i < playerc) {
			merge(players, new player(getString("Enter player "+(i+1)+" name:")));
			i += 1;
		}
		trigger logic;
	}

	logic {
		startingPlayer = (p IN players WHERE sizeof (p.hand.hasCard(new card(2,4))) > 0 SELECT p); //find out which player has 2 of clubs

		while (sizeof players[0].hand > 0){ //If one players hand is empty 
			
		} 
	}

}

player {
	name = "";
	hand = new hand;
	tricks = [];

	init {
		name = $0;
	}
}

pile {
	cards = [];

	init {
		i = 1;
        while (i < 52) {
        	suit = i % 4;
        	rank = ceil(i / 13);
        	
        	merge(cards,new card(rank,suit));
        	i += 1;
        }
        shuffle(cards);
	}


}

card {
	rank = 0;
	suit = 0;
	owner = "";
	init {
		rank = $0;
		suit = $1;
	}
}

hand {
    
    cards = [];
    
    cardsIn {
        merge(cards,$$); # $0 is the first argument, $$ is a list of all arguments
    }
    cardsOut {
        return (c in cards where c.rank == $0 select c);
    }
    hasCard {
        return 0 < sizeof (c in cards where c.rank == $0 select c);
    }
}